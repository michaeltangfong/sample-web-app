{"version":3,"file":"objection.js","names":["require","Model","Knex","knex","client","useNullAsDefault","connection","host","port","user","password","database","pool","min","max","acquireConnectionTimeout","migrations","tableName","Person","children","relation","HasManyRelation","modelClass","join","from","to","createSchema","schema","hasTable","createTable","table","increments","primary","integer","references","string","main","query","insertGraph","firstName","sylvester","console","log","where","withGraphFetched","orderBy","sylvesters","then","destroy","err","error"],"sources":["../objection.js"],"sourcesContent":["const { Model } = require('objection');\nconst Knex = require('knex');\n\n// Initialize knex.\nconst knex = Knex({\n    client: 'postgresql',\n    useNullAsDefault: true,\n    connection: {\n        host: '127.0.0.1',\n        port: '5008',\n        user: 'docker',\n        password: 'secret',\n        database: 'sample_db',\n    },\n    pool: { min: 0, max: 7 },\n    acquireConnectionTimeout: 10000,\n    migrations: {\n        tableName: 'migrations'\n    }\n});\n\n// Give the knex instance to objection.\nModel.knex(knex);\n\n// Person model.\nclass Person extends Model {\n    static get tableName() {\n        return 'persons';\n    }\n\n    static get relationMappings() {\n        return {\n            children: {\n                relation: Model.HasManyRelation,\n                modelClass: Person,\n                join: {\n                    from: 'persons.id',\n                    to: 'persons.parentId'\n                }\n            }\n        };\n    }\n}\n\nasync function createSchema() {\n    if (await knex.schema.hasTable('persons')) {\n        return;\n    }\n\n    // Create database schema. You should use knex migration files\n    // to do this. We create it here for simplicity.\n    await knex.schema.createTable('persons', table => {\n        table.increments('id').primary();\n        table.integer('parentId').references('persons.id');\n        table.string('firstName');\n    });\n}\n\nasync function main() {\n    // Create some people.\n    const sylvester = await Person.query().insertGraph({\n        firstName: 'Sylvester',\n\n        children: [\n            {\n                firstName: 'Sage'\n            },\n            {\n                firstName: 'Sophia'\n            }\n        ]\n    });\n\n    console.log('created:', sylvester);\n\n    // Fetch all people named Sylvester and sort them by id.\n    // Load `children` relation eagerly.\n    const sylvesters = await Person.query()\n        .where('firstName', 'Sylvester')\n        .withGraphFetched('children')\n        .orderBy('id');\n\n    console.log('sylvesters:', sylvesters);\n}\n\ncreateSchema()\n    .then(() => main())\n    .then(() => knex.destroy())\n    .catch(err => {\n        console.error(err);\n        return knex.destroy();\n    });"],"mappings":";;;;+CACA,oJ;;;;;;;;;;;;;;;;;;;;;;;;;;AADA,eAAkBA,OAAO,CAAC,WAAD,CAAzB;AAAA,IAAQC,KAAR,YAAQA,KAAR;;AACA,IAAMC,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB,C,CAEA;;;AACA,IAAMG,IAAI,GAAGD,IAAI,CAAC;EACdE,MAAM,EAAE,YADM;EAEdC,gBAAgB,EAAE,IAFJ;EAGdC,UAAU,EAAE;IACRC,IAAI,EAAE,WADE;IAERC,IAAI,EAAE,MAFE;IAGRC,IAAI,EAAE,QAHE;IAIRC,QAAQ,EAAE,QAJF;IAKRC,QAAQ,EAAE;EALF,CAHE;EAUdC,IAAI,EAAE;IAAEC,GAAG,EAAE,CAAP;IAAUC,GAAG,EAAE;EAAf,CAVQ;EAWdC,wBAAwB,EAAE,KAXZ;EAYdC,UAAU,EAAE;IACRC,SAAS,EAAE;EADH;AAZE,CAAD,CAAjB,C,CAiBA;;AACAhB,KAAK,CAACE,IAAN,CAAWA,IAAX,E,CAEA;;IACMe,M;;;;;;;;;;;;;SACF,eAAuB;MACnB,OAAO,SAAP;IACH;;;SAED,eAA8B;MAC1B,OAAO;QACHC,QAAQ,EAAE;UACNC,QAAQ,EAAEnB,KAAK,CAACoB,eADV;UAENC,UAAU,EAAEJ,MAFN;UAGNK,IAAI,EAAE;YACFC,IAAI,EAAE,YADJ;YAEFC,EAAE,EAAE;UAFF;QAHA;MADP,CAAP;IAUH;;;;EAhBgBxB,K;;SAmBNyB,Y;;;;;6EAAf;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,OACcvB,IAAI,CAACwB,MAAL,CAAYC,QAAZ,CAAqB,SAArB,CADd;;UAAA;YAAA;cAAA;cAAA;YAAA;;YAAA;;UAAA;YAAA;YAAA,OAOUzB,IAAI,CAACwB,MAAL,CAAYE,WAAZ,CAAwB,SAAxB,EAAmC,UAAAC,KAAK,EAAI;cAC9CA,KAAK,CAACC,UAAN,CAAiB,IAAjB,EAAuBC,OAAvB;cACAF,KAAK,CAACG,OAAN,CAAc,UAAd,EAA0BC,UAA1B,CAAqC,YAArC;cACAJ,KAAK,CAACK,MAAN,CAAa,WAAb;YACH,CAJK,CAPV;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,C;;;;SAceC,I;;;;;qEAAf;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,OAE4BlB,MAAM,CAACmB,KAAP,GAAeC,WAAf,CAA2B;cAC/CC,SAAS,EAAE,WADoC;cAG/CpB,QAAQ,EAAE,CACN;gBACIoB,SAAS,EAAE;cADf,CADM,EAIN;gBACIA,SAAS,EAAE;cADf,CAJM;YAHqC,CAA3B,CAF5B;;UAAA;YAEUC,SAFV;YAeIC,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,SAAxB,EAfJ,CAiBI;YACA;;YAlBJ;YAAA,OAmB6BtB,MAAM,CAACmB,KAAP,GACpBM,KADoB,CACd,WADc,EACD,WADC,EAEpBC,gBAFoB,CAEH,UAFG,EAGpBC,OAHoB,CAGZ,IAHY,CAnB7B;;UAAA;YAmBUC,UAnBV;YAwBIL,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BI,UAA3B;;UAxBJ;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,C;;;;AA2BApB,YAAY,GACPqB,IADL,CACU;EAAA,OAAMX,IAAI,EAAV;AAAA,CADV,EAEKW,IAFL,CAEU;EAAA,OAAM5C,IAAI,CAAC6C,OAAL,EAAN;AAAA,CAFV,WAGW,UAAAC,GAAG,EAAI;EACVR,OAAO,CAACS,KAAR,CAAcD,GAAd;EACA,OAAO9C,IAAI,CAAC6C,OAAL,EAAP;AACH,CANL"}